from jovian.pythondsa import evaluate_test_case,evaluate_test_cases
tests=[]
test1 = {
    'input': {
        'nums' : [1,2,3,1,1,3]
},
'output':4
}
test2 = {
    'input':{
        'nums':[1,1,1,1]
    },
    'output':6
}
test3 = {
    'input':{
        'nums':[1,2,3]
    },
    'output':0    
}
tests  = [test1,test2,test3]
def good_pair_linear_search(nums):
    ptr1 = 0
    ptr2 = 1
    lst = []
    while ptr1 < ptr2 and ptr2 < len(nums) :
        if nums[ptr1] == nums[ptr2]:
            if (ptr1,ptr2) in lst:
                if ptr2 == len(nums)-1:
                    ptr1 +=1
                    ptr2 = ptr1 +1
                else:
                    ptr2 +=1
            else:
                lst.append((ptr1,ptr2))
        elif ptr2 == len(nums)-1:
            ptr1 +=1
            ptr2 = ptr1 +1
        else:
            ptr2 +=1  
    return len(lst)

evaluate_test_cases(good_pair_linear_search,tests)
# def good_pair_binary_search(nums):
#     lst = []
#     lo = 0
#     hi = len(nums)-1
#     mid = (lo+hi)//2
#     mid_number = nums[mid]
#     while lo <= mid and hi >= mid:
#         if nums[lo] == nums[hi]:
#             lst.append((lo,hi))
#         elif nums[lo] 